<?xml version="1.0" encoding="UTF-8"?>
<ehcache xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:noNamespaceSchemaLocation="http://ehcache.org/ehcache.xsd"
	updateCheck="false">
	<!-- 缓存策略定义 -->
	<diskStore path="java.io.tmpdir" />
	<!-- 
		eternal:[ture/false] 元素是否永恒,如果true 就永不过期(必须设置)
		maxElementsInMemory：[ture/false] 缓存容量的内存最大值(必须设置)
		overflowToDisk：[ture/false] 当缓存达到maxElementsInMemory值是,是否允许溢出到磁盘(必须设置)
		diskPersistent：[ture/false] 磁盘缓存在VM重新启动时是否保持(默认为false)
		timeToIdleSeconds：[int] 导致元素过期的访问间隔(秒为单位). 0表示可以永远空闲,默认为0
		timeToLiveSeconds：[int] 元素在缓存里存在的时间(秒为单位). 0 表示永远存在不过期
		memoryStoreEvictionPolicy：[LFU/FIFO/LRU]  当达到maxElementsInMemory时,如何强制进行驱逐默认使用"最近使用(LRU)"策略,
		先入先出FIFO,最少使用LFU,较少使用LRU
	 -->
	<defaultCache eternal="false" 
		maxElementsInMemory="1000"
		overflowToDisk="false" 
		diskPersistent="false" 
		timeToIdleSeconds="0"
		timeToLiveSeconds="600" 
		memoryStoreEvictionPolicy="LFU" />

	<cache name="baseCache" 
		eternal="false" 
		maxElementsInMemory="500"
		overflowToDisk="false" 
		diskPersistent="false" 
		timeToIdleSeconds="0"
		timeToLiveSeconds="300" 
		memoryStoreEvictionPolicy="LFU" />
		<!-- 
			在DAO层通过注解使用缓存：
			@Cacheable(cacheName="baseCache")  : baseCache 是上面配置
			@TriggersRemove(cacheName="baseCache",removeAll=true) 当数据发生变化的时候清除缓存,做到数据同步
		 -->
</ehcache>